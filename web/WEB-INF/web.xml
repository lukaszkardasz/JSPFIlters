<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <display-name>filters</display-name>
<!--    Strona główna-->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
<!--    Konfiguracja serwletów-->
    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>pl.n2god.servlets.LoginServlet</servlet-class>

    </servlet>
    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/LoginServlet</url-pattern>
    </servlet-mapping>



</web-app>

<!--W deskryptorze wdrożenia widzimy znane nam już wpisy związane z serwletami, czyli <servlet> oraz <servlet-mapping>.
Konfiguracja filtrów przebiega bardzo podobnie tak więc najpierw definiujemy istnienie filtra poprzez wpisy <filter>.
Następnie należy określić mapowanie, czyli przy odwoływaniu się do jakiego zasobu dany filtr ma zostać wykonany.
Robimy to we wpisach <filter-mapping> podając nazwę filtra (<filter-name>) oraz adres (lub schemat adresu),
dla którego filtr ma być aktywny(<url-pattern>). W konfiguracji filtra, podobnie jak przy serwletach, możemy
określić parametry początkowe poprzez wpis <init-param> z parami klucz-wartość. W naszym przypadku zdefiniowaliśmy
proste wyrażenie regularne, które definiuje dowolny adres IP rozpoczynający się od 192.168.1.xxx.
W naszym przypadku przy próbie do odwołania się do dowolnego adresu w naszej aplikacji (/*) wywołany zostanie filtr
sprawdzający adres IP. Przy próbie przejścia do strony /admin.jsp jako drugi filtr wykona się AuthFilter sprawdzający,
czy użytkownik jest zalogowany. Kolejność zdefiniowania wpisów <filter-mapping> ma znaczenie. Będą one wykonywane
w kolejności zgodnej z tą z jaką je zdefiniowaliśmy. Najpierw wykona się IpFilter, a dopiero następnie AuthFilter -
co jest logiczne, bo nie chcemy sprawdzać, czy użytkownik jest zalogowany, jeśli jego adres IP i tak nie przejdzie weryfikacji.-->